<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title> - open source</title>
    <link href="https://alexnav73.github.io/tags/open-source/atom.xml" rel="self" type="application/atom+xml"/>
    <link href="https://alexnav73.github.io"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2023-03-16T00:00:00+00:00</updated>
    <id>https://alexnav73.github.io/tags/open-source/atom.xml</id>
    <entry xml:lang="en">
        <title>Post 1</title>
        <published>2023-03-16T00:00:00+00:00</published>
        <updated>2023-03-16T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://alexnav73.github.io/page-1/" type="text/html"/>
        <id>https://alexnav73.github.io/page-1/</id>
        <content type="html">&lt;h2 id=&quot;general-overview&quot;&gt;General Overview&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;code&gt;Navitski.Crystalized&lt;&#x2F;code&gt; is a set of cross-platform libraries which helps to build  your own domain model. They are providing building blocks to implement your own domain model which, from the birds-eye view, will look like on the following diagram:&lt;&#x2F;p&gt;
&lt;div class=&quot;mermaid&quot;&gt;
flowchart LR
    subgraph Application
        domainModel[Domain Model] --&amp;gt; shard[Model Shard 1]
        domainModel --&amp;gt; etc[...]
        shard --&amp;gt; col[Collections]
        shard --&amp;gt; rel[Relations]
    end
    subgraph Plug-in
        domainModel --&amp;gt; shard2[Model Shard 2]
    end
&lt;&#x2F;div&gt;
&lt;p&gt;The entry point of the model is a class, which inherits &lt;code&gt;DomainModel&lt;&#x2F;code&gt; abstract class and contains a collection of model shards. Model shard is a way to split data into pieces by purpose or by business domain boundary. Domain Model collects all model shards &lt;&#x2F;p&gt;
</content>
    </entry>
</feed>
